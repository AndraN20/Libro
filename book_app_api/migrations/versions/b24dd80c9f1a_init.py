"""init

Revision ID: b24dd80c9f1a
Revises: 
Create Date: 2025-04-29 14:50:03.706172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b24dd80c9f1a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('storage_type', sa.Enum('LOCAL', 'S3', 'GCS', 'AZURE', name='storagetypeenum'), nullable=False),
    sa.Column('bucket_name', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_url', sa.String(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'completed', name='statusenum'), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chapter',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('epub_id', sa.String(length=255), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('href', sa.String(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('uq_chapter_epub_id_book_id', 'chapter', ['epub_id', 'book_id'], unique=True)
    op.create_table('progress',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('last_page_read', sa.Integer(), nullable=True),
    sa.Column('last_chapter_read', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('book_id', 'user_id')
    )
    op.create_table('annotation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('BOOKMARK', 'NOTE', 'HIGHLIGHT', name='annotationtype'), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('cfi', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id', 'book_id'], ['progress.user_id', 'progress.book_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annotation')
    op.drop_table('progress')
    op.drop_index('uq_chapter_epub_id_book_id', table_name='chapter')
    op.drop_table('chapter')
    op.drop_table('book')
    op.drop_table('user')
    op.drop_table('provider')
    # ### end Alembic commands ###
